# Standalone Ingress for Keycloak
# Use this if you prefer to manage ingress separately from Helm values
# Note: Disable ingress.enabled in values-ha.yaml if using this file

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-ingress
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/component: ingress
  annotations:
    # Cert-Manager annotations for Let's Encrypt
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    
    # # Ingress class (adjust based on your controller)
    # kubernetes.io/ingress.class: "nginx"
    
    # Nginx specific annotations
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Backend protocol
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    
    # Rate limiting (optional)
    nginx.ingress.kubernetes.io/rate-limit-rps: "100"
    
    # Security headers
    # nginx.ingress.kubernetes.io/server-snippet: |
    #   add_header X-Frame-Options "SAMEORIGIN" always;
    #   add_header X-Content-Type-Options "nosniff" always;
    #   add_header X-XSS-Protection "1; mode=block" always;
    #   add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    #   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Custom configuration for Keycloak
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   more_set_headers "X-Forwarded-Proto: https";
    #   more_set_headers "X-Forwarded-Port: 443";

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - keycloak.marouanedbibih.studio
      secretName: keycloak-tls-cert
  rules:
    - host: keycloak.marouanedbibih.studio
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 80

---
# Optional: Admin-specific ingress with additional security
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak-admin-ingress
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/component: admin-ingress
  annotations:
    # Cert-Manager annotations
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    
    # # Ingress class
    # kubernetes.io/ingress.class: "nginx"
    
    # Enhanced security for admin paths
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # IP Whitelist for admin access (uncomment and configure as needed)
    # nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
    # Rate limiting for admin paths
    nginx.ingress.kubernetes.io/rate-limit-rps: "10"
    nginx.ingress.kubernetes.io/rate-limit-burst-multiplier: "2"
    
    # Additional security headers for admin
    # nginx.ingress.kubernetes.io/server-snippet: |
    #   add_header X-Frame-Options "DENY" always;
    #   add_header X-Content-Type-Options "nosniff" always;
    #   add_header X-XSS-Protection "1; mode=block" always;
    #   add_header Referrer-Policy "no-referrer" always;
    #   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    #   add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;

spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - keycloak.marouanedbibih.studio
      secretName: keycloak-admin-tls-cert
  rules:
    - host: keycloak.marouanedbibih.studio
      http:
        paths:
          - path: /admin
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 80
          - path: /realms/master
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 80